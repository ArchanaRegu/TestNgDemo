<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="2" ignored="2" total="80" passed="72" failed="4" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-10-22T13:55:17 CDT" name="Suite" finished-at="2024-10-22T14:03:48 CDT" duration-ms="511672">
    <groups>
    </groups>
    <test started-at="2024-10-22T13:55:17 CDT" name="Test4" finished-at="2024-10-22T13:55:54 CDT" duration-ms="37045">
      <class name="TestClasses.HomepageFile">
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.HomepageFile@6950ed69]" started-at="2024-10-22T13:55:19 CDT" name="callingobjects" finished-at="2024-10-22T13:55:35 CDT" duration-ms="15634" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@6dc1484]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="Homepage(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:TestClasses.HomepageFile@6950ed69]" started-at="2024-10-22T13:55:35 CDT" name="Homepage" data-provider="Registationdatapro" finished-at="2024-10-22T13:55:41 CDT" duration-ms="5366" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Nirvana]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[archanachaya]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[print("helloSelenium")]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Valid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Homepage -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.HomepageFile@6950ed69]" started-at="2024-10-22T13:55:41 CDT" name="captureString" finished-at="2024-10-22T13:55:41 CDT" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.HomepageFile.Homepage(java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=Homepage status=SUCCESS method=HomepageFile.Homepage(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:TestClasses.HomepageFile@6950ed69] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.HomepageFile@6950ed69]" started-at="2024-10-22T13:55:41 CDT" name="callingobjects" finished-at="2024-10-22T13:55:47 CDT" duration-ms="6234" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@6dc1484]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="quitmethod()[pri:3, instance:TestClasses.HomepageFile@6950ed69]" started-at="2024-10-22T13:55:47 CDT" name="quitmethod" finished-at="2024-10-22T13:55:54 CDT" duration-ms="6660" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitmethod -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.HomepageFile@6950ed69]" started-at="2024-10-22T13:55:54 CDT" name="captureString" finished-at="2024-10-22T13:55:54 CDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.HomepageFile.quitmethod() throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=quitmethod status=SUCCESS method=HomepageFile.quitmethod()[pri:3, instance:TestClasses.HomepageFile@6950ed69] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
      </class> <!-- TestClasses.HomepageFile -->
    </test> <!-- Test4 -->
    <test started-at="2024-10-22T13:55:17 CDT" name="Test2" finished-at="2024-10-22T13:56:09 CDT" duration-ms="52285">
      <class name="TestClasses.DataStructure">
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.DataStructure@24c22fe]" started-at="2024-10-22T13:55:19 CDT" name="callingobjects" finished-at="2024-10-22T13:55:40 CDT" duration-ms="20952" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@2fb5fe30]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="Dspage(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:TestClasses.DataStructure@24c22fe]" started-at="2024-10-22T13:55:40 CDT" name="Dspage" data-provider="Graphsdatapro" finished-at="2024-10-22T13:55:52 CDT" duration-ms="12160" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Nirvana]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[archanachaya]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[print("helloSelenium")]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Valid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Dspage -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.DataStructure@24c22fe]" started-at="2024-10-22T13:55:52 CDT" name="captureString" finished-at="2024-10-22T13:55:52 CDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.DataStructure.Dspage(java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=Dspage status=SUCCESS method=DataStructure.Dspage(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:TestClasses.DataStructure@24c22fe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.DataStructure@24c22fe]" started-at="2024-10-22T13:55:52 CDT" name="callingobjects" finished-at="2024-10-22T13:56:01 CDT" duration-ms="8521" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@2fb5fe30]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="Dspage(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:TestClasses.DataStructure@24c22fe]" started-at="2024-10-22T13:56:01 CDT" name="Dspage" data-provider="Graphsdatapro" finished-at="2024-10-22T13:56:09 CDT" duration-ms="8106" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[prin('hello]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Dspage -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.DataStructure@24c22fe]" started-at="2024-10-22T13:56:09 CDT" name="captureString" finished-at="2024-10-22T13:56:09 CDT" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.DataStructure.Dspage(java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=Dspage status=SUCCESS method=DataStructure.Dspage(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:TestClasses.DataStructure@24c22fe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
      </class> <!-- TestClasses.DataStructure -->
    </test> <!-- Test2 -->
    <test started-at="2024-10-22T13:55:17 CDT" name="Test3" finished-at="2024-10-22T13:57:14 CDT" duration-ms="117470">
      <class name="TestClasses.GraphsFile">
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.GraphsFile@15a04efb]" started-at="2024-10-22T13:55:19 CDT" name="callingobjects" finished-at="2024-10-22T13:55:48 CDT" duration-ms="28591" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@6e92c6ad]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="Graph_Representation(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:TestClasses.GraphsFile@15a04efb]" started-at="2024-10-22T13:55:48 CDT" name="Graph_Representation" data-provider="Graphsdatapro" finished-at="2024-10-22T13:56:08 CDT" duration-ms="19882" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Nirvana]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[archanachaya]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[print("helloSelenium")]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Valid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Graph_Representation -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.GraphsFile@15a04efb]" started-at="2024-10-22T13:56:08 CDT" name="captureString" finished-at="2024-10-22T13:56:08 CDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.GraphsFile.Graph_Representation(java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=Graph_Representation status=SUCCESS method=GraphsFile.Graph_Representation(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:TestClasses.GraphsFile@15a04efb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.GraphsFile@15a04efb]" started-at="2024-10-22T13:56:08 CDT" name="callingobjects" finished-at="2024-10-22T13:56:16 CDT" duration-ms="8095" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@6e92c6ad]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="Graph_Representation(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:TestClasses.GraphsFile@15a04efb]" started-at="2024-10-22T13:56:16 CDT" name="Graph_Representation" data-provider="Graphsdatapro" finished-at="2024-10-22T13:56:21 CDT" duration-ms="4753" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[prin('hello]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Graph_Representation -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.GraphsFile@15a04efb]" started-at="2024-10-22T13:56:21 CDT" name="captureString" finished-at="2024-10-22T13:56:21 CDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.GraphsFile.Graph_Representation(java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=Graph_Representation status=SUCCESS method=GraphsFile.Graph_Representation(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:TestClasses.GraphsFile@15a04efb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.GraphsFile@15a04efb]" started-at="2024-10-22T13:56:21 CDT" name="callingobjects" finished-at="2024-10-22T13:56:29 CDT" duration-ms="8084" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@6e92c6ad]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="graphs_Topic(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:TestClasses.GraphsFile@15a04efb]" started-at="2024-10-22T13:56:29 CDT" name="graphs_Topic" data-provider="Graphsdatapro" finished-at="2024-10-22T13:56:56 CDT" duration-ms="27725" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Nirvana]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[archanachaya]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[print("helloSelenium")]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Valid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphs_Topic -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.GraphsFile@15a04efb]" started-at="2024-10-22T13:56:56 CDT" name="captureString" finished-at="2024-10-22T13:56:56 CDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.GraphsFile.graphs_Topic(java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=graphs_Topic status=SUCCESS method=GraphsFile.graphs_Topic(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:TestClasses.GraphsFile@15a04efb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.GraphsFile@15a04efb]" started-at="2024-10-22T13:56:56 CDT" name="callingobjects" finished-at="2024-10-22T13:57:04 CDT" duration-ms="7621" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@6e92c6ad]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="graphs_Topic(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:TestClasses.GraphsFile@15a04efb]" started-at="2024-10-22T13:57:04 CDT" name="graphs_Topic" data-provider="Graphsdatapro" finished-at="2024-10-22T13:57:14 CDT" duration-ms="10124" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[prin('hello]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Invalid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphs_Topic -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.GraphsFile@15a04efb]" started-at="2024-10-22T13:57:14 CDT" name="captureString" finished-at="2024-10-22T13:57:14 CDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.GraphsFile.graphs_Topic(java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=graphs_Topic status=SUCCESS method=GraphsFile.graphs_Topic(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:TestClasses.GraphsFile@15a04efb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
      </class> <!-- TestClasses.GraphsFile -->
    </test> <!-- Test3 -->
    <test started-at="2024-10-22T13:55:17 CDT" name="Test1" finished-at="2024-10-22T13:58:54 CDT" duration-ms="217351">
      <class name="TestClasses.ArraysDocClassFile">
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.ArraysDocClassFile@34129c78]" started-at="2024-10-22T13:55:17 CDT" name="callingobjects" finished-at="2024-10-22T13:55:40 CDT" duration-ms="23488" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@7ff2b8d2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="Arraypage(java.lang.String)[pri:0, instance:TestClasses.ArraysDocClassFile@34129c78]" started-at="2024-10-22T13:55:40 CDT" name="Arraypage" data-provider="Arraysdatapro" finished-at="2024-10-22T13:55:52 CDT" duration-ms="11694" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Arrays in Python]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Arraypage -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.ArraysDocClassFile@34129c78]" started-at="2024-10-22T13:55:52 CDT" name="captureString" finished-at="2024-10-22T13:55:52 CDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.ArraysDocClassFile.Arraypage(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=Arraypage status=SUCCESS method=ArraysDocClassFile.Arraypage(java.lang.String)[pri:0, instance:TestClasses.ArraysDocClassFile@34129c78] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.ArraysDocClassFile@34129c78]" started-at="2024-10-22T13:55:52 CDT" name="callingobjects" finished-at="2024-10-22T13:56:02 CDT" duration-ms="9966" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@7ff2b8d2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="Arraypage(java.lang.String)[pri:0, instance:TestClasses.ArraysDocClassFile@34129c78]" started-at="2024-10-22T13:56:02 CDT" name="Arraypage" data-provider="Arraysdatapro" finished-at="2024-10-22T13:56:33 CDT" duration-ms="31172" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Arrays Using List]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Arraypage -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.ArraysDocClassFile@34129c78]" started-at="2024-10-22T13:56:33 CDT" name="captureString" finished-at="2024-10-22T13:56:33 CDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.ArraysDocClassFile.Arraypage(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=Arraypage status=SUCCESS method=ArraysDocClassFile.Arraypage(java.lang.String)[pri:0, instance:TestClasses.ArraysDocClassFile@34129c78] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.ArraysDocClassFile@34129c78]" started-at="2024-10-22T13:56:33 CDT" name="callingobjects" finished-at="2024-10-22T13:56:43 CDT" duration-ms="9957" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@7ff2b8d2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="Arraypage(java.lang.String)[pri:0, instance:TestClasses.ArraysDocClassFile@34129c78]" started-at="2024-10-22T13:56:43 CDT" name="Arraypage" data-provider="Arraysdatapro" finished-at="2024-10-22T13:57:23 CDT" duration-ms="40137" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Basic Operations in Lists]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Arraypage -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.ArraysDocClassFile@34129c78]" started-at="2024-10-22T13:57:23 CDT" name="callingobjects" finished-at="2024-10-22T13:57:29 CDT" duration-ms="5510" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@7ff2b8d2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.ArraysDocClassFile@34129c78]" started-at="2024-10-22T13:57:23 CDT" name="captureString" finished-at="2024-10-22T13:57:23 CDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.ArraysDocClassFile.Arraypage(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=Arraypage status=SUCCESS method=ArraysDocClassFile.Arraypage(java.lang.String)[pri:0, instance:TestClasses.ArraysDocClassFile@34129c78] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method signature="Arraypage(java.lang.String)[pri:0, instance:TestClasses.ArraysDocClassFile@34129c78]" started-at="2024-10-22T13:57:29 CDT" name="Arraypage" data-provider="Arraysdatapro" finished-at="2024-10-22T13:57:42 CDT" duration-ms="12950" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Applications of Array]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Arraypage -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.ArraysDocClassFile@34129c78]" started-at="2024-10-22T13:57:42 CDT" name="captureString" finished-at="2024-10-22T13:57:42 CDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.ArraysDocClassFile.Arraypage(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=Arraypage status=SUCCESS method=ArraysDocClassFile.Arraypage(java.lang.String)[pri:0, instance:TestClasses.ArraysDocClassFile@34129c78] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.ArraysDocClassFile@34129c78]" started-at="2024-10-22T13:57:42 CDT" name="callingobjects" finished-at="2024-10-22T13:57:46 CDT" duration-ms="4645" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@7ff2b8d2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="usingDp(java.lang.String)[pri:0, instance:TestClasses.ArraysDocClassFile@34129c78]" started-at="2024-10-22T13:57:46 CDT" name="usingDp" data-provider="Arraysdatapro" finished-at="2024-10-22T13:57:58 CDT" duration-ms="11074" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Arrays in Python]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- usingDp -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.ArraysDocClassFile@34129c78]" started-at="2024-10-22T13:57:58 CDT" name="captureString" finished-at="2024-10-22T13:57:58 CDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.ArraysDocClassFile.usingDp(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=usingDp status=SUCCESS method=ArraysDocClassFile.usingDp(java.lang.String)[pri:0, instance:TestClasses.ArraysDocClassFile@34129c78] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.ArraysDocClassFile@34129c78]" started-at="2024-10-22T13:57:58 CDT" name="callingobjects" finished-at="2024-10-22T13:58:03 CDT" duration-ms="5150" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@7ff2b8d2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="usingDp(java.lang.String)[pri:0, instance:TestClasses.ArraysDocClassFile@34129c78]" started-at="2024-10-22T13:58:03 CDT" name="usingDp" data-provider="Arraysdatapro" finished-at="2024-10-22T13:58:25 CDT" duration-ms="22171" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Arrays Using List]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- usingDp -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.ArraysDocClassFile@34129c78]" started-at="2024-10-22T13:58:25 CDT" name="captureString" finished-at="2024-10-22T13:58:25 CDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.ArraysDocClassFile.usingDp(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=usingDp status=SUCCESS method=ArraysDocClassFile.usingDp(java.lang.String)[pri:0, instance:TestClasses.ArraysDocClassFile@34129c78] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.ArraysDocClassFile@34129c78]" started-at="2024-10-22T13:58:25 CDT" name="callingobjects" finished-at="2024-10-22T13:58:31 CDT" duration-ms="5955" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@7ff2b8d2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="usingDp(java.lang.String)[pri:0, instance:TestClasses.ArraysDocClassFile@34129c78]" started-at="2024-10-22T13:58:31 CDT" name="usingDp" data-provider="Arraysdatapro" finished-at="2024-10-22T13:58:41 CDT" duration-ms="10175" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Basic Operations in Lists]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- usingDp -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.ArraysDocClassFile@34129c78]" started-at="2024-10-22T13:58:41 CDT" name="captureString" finished-at="2024-10-22T13:58:41 CDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.ArraysDocClassFile.usingDp(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=usingDp status=SUCCESS method=ArraysDocClassFile.usingDp(java.lang.String)[pri:0, instance:TestClasses.ArraysDocClassFile@34129c78] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.ArraysDocClassFile@34129c78]" started-at="2024-10-22T13:58:41 CDT" name="callingobjects" finished-at="2024-10-22T13:58:49 CDT" duration-ms="7660" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@7ff2b8d2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="usingDp(java.lang.String)[pri:0, instance:TestClasses.ArraysDocClassFile@34129c78]" started-at="2024-10-22T13:58:49 CDT" name="usingDp" data-provider="Arraysdatapro" finished-at="2024-10-22T13:58:54 CDT" duration-ms="5462" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Applications of Array]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- usingDp -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.ArraysDocClassFile@34129c78]" started-at="2024-10-22T13:58:54 CDT" name="captureString" finished-at="2024-10-22T13:58:54 CDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.ArraysDocClassFile.usingDp(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=usingDp status=SUCCESS method=ArraysDocClassFile.usingDp(java.lang.String)[pri:0, instance:TestClasses.ArraysDocClassFile@34129c78] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
      </class> <!-- TestClasses.ArraysDocClassFile -->
    </test> <!-- Test1 -->
    <test started-at="2024-10-22T13:56:09 CDT" name="Test6" finished-at="2024-10-22T13:59:11 CDT" duration-ms="182240">
      <class name="TestClasses.QueuesFile">
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.QueuesFile@2e32ccc5]" started-at="2024-10-22T13:56:09 CDT" name="callingobjects" finished-at="2024-10-22T13:56:18 CDT" duration-ms="8649" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@2375b321]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="queues_paneIn(java.lang.String)[pri:0, instance:TestClasses.QueuesFile@2e32ccc5]" started-at="2024-10-22T13:56:18 CDT" name="queues_paneIn" data-provider="QueuesTopics" finished-at="2024-10-22T13:56:39 CDT" duration-ms="21664" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Implementation of Queue in Python]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queues_paneIn -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.QueuesFile@2e32ccc5]" started-at="2024-10-22T13:56:39 CDT" name="captureString" finished-at="2024-10-22T13:56:40 CDT" duration-ms="30" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.QueuesFile.queues_paneIn(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=queues_paneIn status=SUCCESS method=QueuesFile.queues_paneIn(java.lang.String)[pri:0, instance:TestClasses.QueuesFile@2e32ccc5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.QueuesFile@2e32ccc5]" started-at="2024-10-22T13:56:40 CDT" name="callingobjects" finished-at="2024-10-22T13:56:50 CDT" duration-ms="10188" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@2375b321]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="queues_paneIn(java.lang.String)[pri:0, instance:TestClasses.QueuesFile@2e32ccc5]" started-at="2024-10-22T13:56:50 CDT" name="queues_paneIn" data-provider="QueuesTopics" finished-at="2024-10-22T13:57:04 CDT" duration-ms="14656" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Implementation using collections.deque]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queues_paneIn -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.QueuesFile@2e32ccc5]" started-at="2024-10-22T13:57:04 CDT" name="captureString" finished-at="2024-10-22T13:57:04 CDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.QueuesFile.queues_paneIn(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=queues_paneIn status=SUCCESS method=QueuesFile.queues_paneIn(java.lang.String)[pri:0, instance:TestClasses.QueuesFile@2e32ccc5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.QueuesFile@2e32ccc5]" started-at="2024-10-22T13:57:04 CDT" name="callingobjects" finished-at="2024-10-22T13:57:12 CDT" duration-ms="7316" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@2375b321]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="queues_paneIn(java.lang.String)[pri:0, instance:TestClasses.QueuesFile@2e32ccc5]" started-at="2024-10-22T13:57:12 CDT" name="queues_paneIn" data-provider="QueuesTopics" finished-at="2024-10-22T13:57:18 CDT" duration-ms="6004" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Implementation using array]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queues_paneIn -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.QueuesFile@2e32ccc5]" started-at="2024-10-22T13:57:18 CDT" name="captureString" finished-at="2024-10-22T13:57:18 CDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.QueuesFile.queues_paneIn(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=queues_paneIn status=SUCCESS method=QueuesFile.queues_paneIn(java.lang.String)[pri:0, instance:TestClasses.QueuesFile@2e32ccc5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.QueuesFile@2e32ccc5]" started-at="2024-10-22T13:57:18 CDT" name="callingobjects" finished-at="2024-10-22T13:57:24 CDT" duration-ms="5824" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@2375b321]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="queues_paneIn(java.lang.String)[pri:0, instance:TestClasses.QueuesFile@2e32ccc5]" started-at="2024-10-22T13:57:24 CDT" name="queues_paneIn" data-provider="QueuesTopics" finished-at="2024-10-22T13:57:45 CDT" duration-ms="21440" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Queue Operations]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queues_paneIn -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.QueuesFile@2e32ccc5]" started-at="2024-10-22T13:57:45 CDT" name="captureString" finished-at="2024-10-22T13:57:45 CDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.QueuesFile.queues_paneIn(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=queues_paneIn status=SUCCESS method=QueuesFile.queues_paneIn(java.lang.String)[pri:0, instance:TestClasses.QueuesFile@2e32ccc5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.QueuesFile@2e32ccc5]" started-at="2024-10-22T13:57:45 CDT" name="callingobjects" finished-at="2024-10-22T13:57:54 CDT" duration-ms="9037" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@2375b321]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="queues_pane_validcode(java.lang.String)[pri:0, instance:TestClasses.QueuesFile@2e32ccc5]" started-at="2024-10-22T13:57:54 CDT" name="queues_pane_validcode" description="Verify Queuepane on DsAlgo" data-provider="QueuesTopics" finished-at="2024-10-22T13:58:12 CDT" duration-ms="17334" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Implementation of Queue in Python]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queues_pane_validcode -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.QueuesFile@2e32ccc5]" started-at="2024-10-22T13:58:12 CDT" name="captureString" finished-at="2024-10-22T13:58:12 CDT" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.QueuesFile.queues_pane_validcode(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=queues_pane_validcode status=SUCCESS method=QueuesFile.queues_pane_validcode(java.lang.String)[pri:0, instance:TestClasses.QueuesFile@2e32ccc5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.QueuesFile@2e32ccc5]" started-at="2024-10-22T13:58:12 CDT" name="callingobjects" finished-at="2024-10-22T13:58:18 CDT" duration-ms="6385" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@2375b321]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="queues_pane_validcode(java.lang.String)[pri:0, instance:TestClasses.QueuesFile@2e32ccc5]" started-at="2024-10-22T13:58:18 CDT" name="queues_pane_validcode" description="Verify Queuepane on DsAlgo" data-provider="QueuesTopics" finished-at="2024-10-22T13:58:23 CDT" duration-ms="4888" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Implementation using collections.deque]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queues_pane_validcode -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.QueuesFile@2e32ccc5]" started-at="2024-10-22T13:58:23 CDT" name="captureString" finished-at="2024-10-22T13:58:23 CDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.QueuesFile.queues_pane_validcode(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=queues_pane_validcode status=SUCCESS method=QueuesFile.queues_pane_validcode(java.lang.String)[pri:0, instance:TestClasses.QueuesFile@2e32ccc5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.QueuesFile@2e32ccc5]" started-at="2024-10-22T13:58:23 CDT" name="callingobjects" finished-at="2024-10-22T13:58:37 CDT" duration-ms="13703" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@2375b321]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="queues_pane_validcode(java.lang.String)[pri:0, instance:TestClasses.QueuesFile@2e32ccc5]" started-at="2024-10-22T13:58:37 CDT" name="queues_pane_validcode" description="Verify Queuepane on DsAlgo" data-provider="QueuesTopics" finished-at="2024-10-22T13:58:59 CDT" duration-ms="22483" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Implementation using array]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queues_pane_validcode -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.QueuesFile@2e32ccc5]" started-at="2024-10-22T13:58:59 CDT" name="captureString" finished-at="2024-10-22T13:58:59 CDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.QueuesFile.queues_pane_validcode(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=queues_pane_validcode status=SUCCESS method=QueuesFile.queues_pane_validcode(java.lang.String)[pri:0, instance:TestClasses.QueuesFile@2e32ccc5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.QueuesFile@2e32ccc5]" started-at="2024-10-22T13:58:59 CDT" name="callingobjects" finished-at="2024-10-22T13:59:07 CDT" duration-ms="8102" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@2375b321]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="queues_pane_validcode(java.lang.String)[pri:0, instance:TestClasses.QueuesFile@2e32ccc5]" started-at="2024-10-22T13:59:07 CDT" name="queues_pane_validcode" description="Verify Queuepane on DsAlgo" data-provider="QueuesTopics" finished-at="2024-10-22T13:59:11 CDT" duration-ms="4155" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Queue Operations]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queues_pane_validcode -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.QueuesFile@2e32ccc5]" started-at="2024-10-22T13:59:11 CDT" name="captureString" finished-at="2024-10-22T13:59:11 CDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.QueuesFile.queues_pane_validcode(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=queues_pane_validcode status=SUCCESS method=QueuesFile.queues_pane_validcode(java.lang.String)[pri:0, instance:TestClasses.QueuesFile@2e32ccc5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
      </class> <!-- TestClasses.QueuesFile -->
    </test> <!-- Test6 -->
    <test started-at="2024-10-22T13:57:14 CDT" name="Test7" finished-at="2024-10-22T13:59:38 CDT" duration-ms="143630">
      <class name="TestClasses.StackClassFile">
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.StackClassFile@895e367]" started-at="2024-10-22T13:57:14 CDT" name="callingobjects" finished-at="2024-10-22T13:57:20 CDT" duration-ms="5604" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5baaae4c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="Valid_Stackpane(java.lang.String)[pri:1, instance:TestClasses.StackClassFile@895e367]" started-at="2024-10-22T13:57:20 CDT" name="Valid_Stackpane" data-provider="StacksTopics" finished-at="2024-10-22T13:57:28 CDT" duration-ms="8572" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Operations in Stack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Valid_Stackpane -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.StackClassFile@895e367]" started-at="2024-10-22T13:57:28 CDT" name="captureString" finished-at="2024-10-22T13:57:28 CDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.StackClassFile.Valid_Stackpane(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=Valid_Stackpane status=SUCCESS method=StackClassFile.Valid_Stackpane(java.lang.String)[pri:1, instance:TestClasses.StackClassFile@895e367] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.StackClassFile@895e367]" started-at="2024-10-22T13:57:28 CDT" name="callingobjects" finished-at="2024-10-22T13:57:37 CDT" duration-ms="8161" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5baaae4c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="Valid_Stackpane(java.lang.String)[pri:1, instance:TestClasses.StackClassFile@895e367]" started-at="2024-10-22T13:57:37 CDT" name="Valid_Stackpane" data-provider="StacksTopics" finished-at="2024-10-22T13:57:46 CDT" duration-ms="9511" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Implementation]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Valid_Stackpane -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.StackClassFile@895e367]" started-at="2024-10-22T13:57:46 CDT" name="captureString" finished-at="2024-10-22T13:57:46 CDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.StackClassFile.Valid_Stackpane(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=Valid_Stackpane status=SUCCESS method=StackClassFile.Valid_Stackpane(java.lang.String)[pri:1, instance:TestClasses.StackClassFile@895e367] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.StackClassFile@895e367]" started-at="2024-10-22T13:57:46 CDT" name="callingobjects" finished-at="2024-10-22T13:57:55 CDT" duration-ms="8392" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5baaae4c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="Valid_Stackpane(java.lang.String)[pri:1, instance:TestClasses.StackClassFile@895e367]" started-at="2024-10-22T13:57:55 CDT" name="Valid_Stackpane" data-provider="StacksTopics" finished-at="2024-10-22T13:58:07 CDT" duration-ms="12795" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Applications]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Valid_Stackpane -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.StackClassFile@895e367]" started-at="2024-10-22T13:58:07 CDT" name="captureString" finished-at="2024-10-22T13:58:07 CDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.StackClassFile.Valid_Stackpane(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=Valid_Stackpane status=SUCCESS method=StackClassFile.Valid_Stackpane(java.lang.String)[pri:1, instance:TestClasses.StackClassFile@895e367] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.StackClassFile@895e367]" started-at="2024-10-22T13:58:07 CDT" name="callingobjects" finished-at="2024-10-22T13:58:13 CDT" duration-ms="5569" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5baaae4c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="invalid_Stackpan(java.lang.String)[pri:2, instance:TestClasses.StackClassFile@895e367]" started-at="2024-10-22T13:58:13 CDT" name="invalid_Stackpan" data-provider="StacksTopics" finished-at="2024-10-22T13:58:41 CDT" duration-ms="28071" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Operations in Stack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalid_Stackpan -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.StackClassFile@895e367]" started-at="2024-10-22T13:58:41 CDT" name="captureString" finished-at="2024-10-22T13:58:41 CDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.StackClassFile.invalid_Stackpan(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=invalid_Stackpan status=SUCCESS method=StackClassFile.invalid_Stackpan(java.lang.String)[pri:2, instance:TestClasses.StackClassFile@895e367] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.StackClassFile@895e367]" started-at="2024-10-22T13:58:41 CDT" name="callingobjects" finished-at="2024-10-22T13:58:49 CDT" duration-ms="7535" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5baaae4c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="invalid_Stackpan(java.lang.String)[pri:2, instance:TestClasses.StackClassFile@895e367]" started-at="2024-10-22T13:58:49 CDT" name="invalid_Stackpan" data-provider="StacksTopics" finished-at="2024-10-22T13:59:15 CDT" duration-ms="26591" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Implementation]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalid_Stackpan -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.StackClassFile@895e367]" started-at="2024-10-22T13:59:15 CDT" name="captureString" finished-at="2024-10-22T13:59:15 CDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.StackClassFile.invalid_Stackpan(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=invalid_Stackpan status=SUCCESS method=StackClassFile.invalid_Stackpan(java.lang.String)[pri:2, instance:TestClasses.StackClassFile@895e367] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.StackClassFile@895e367]" started-at="2024-10-22T13:59:15 CDT" name="callingobjects" finished-at="2024-10-22T13:59:23 CDT" duration-ms="7572" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5baaae4c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="invalid_Stackpan(java.lang.String)[pri:2, instance:TestClasses.StackClassFile@895e367]" started-at="2024-10-22T13:59:23 CDT" name="invalid_Stackpan" data-provider="StacksTopics" finished-at="2024-10-22T13:59:38 CDT" duration-ms="15110" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Applications]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalid_Stackpan -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.StackClassFile@895e367]" started-at="2024-10-22T13:59:38 CDT" name="captureString" finished-at="2024-10-22T13:59:38 CDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.StackClassFile.invalid_Stackpan(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=invalid_Stackpan status=SUCCESS method=StackClassFile.invalid_Stackpan(java.lang.String)[pri:2, instance:TestClasses.StackClassFile@895e367] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
      </class> <!-- TestClasses.StackClassFile -->
    </test> <!-- Test7 -->
    <test started-at="2024-10-22T13:59:38 CDT" name="Test10" finished-at="2024-10-22T14:00:26 CDT" duration-ms="47678">
      <class name="TestClasses.RegistrationClassFile">
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.RegistrationClassFile@329dbdbf]" started-at="2024-10-22T13:59:38 CDT" name="callingobjects" finished-at="2024-10-22T13:59:42 CDT" duration-ms="3769" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@4f449e8f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="enter_username_password_click_btn()[pri:2, instance:TestClasses.RegistrationClassFile@329dbdbf]" started-at="2024-10-22T13:59:42 CDT" name="enter_username_password_click_btn" finished-at="2024-10-22T13:59:43 CDT" duration-ms="1218" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enter_username_password_click_btn -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.RegistrationClassFile@329dbdbf]" started-at="2024-10-22T13:59:43 CDT" name="captureString" finished-at="2024-10-22T13:59:43 CDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.RegistrationClassFile.enter_username_password_click_btn() throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=enter_username_password_click_btn status=SUCCESS method=RegistrationClassFile.enter_username_password_click_btn()[pri:2, instance:TestClasses.RegistrationClassFile@329dbdbf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.RegistrationClassFile@329dbdbf]" started-at="2024-10-22T13:59:43 CDT" name="callingobjects" finished-at="2024-10-22T13:59:47 CDT" duration-ms="4453" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@4f449e8f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="click_registration_link_and_user_is_in_registration_page()[pri:3, instance:TestClasses.RegistrationClassFile@329dbdbf]" started-at="2024-10-22T13:59:47 CDT" name="click_registration_link_and_user_is_in_registration_page" finished-at="2024-10-22T13:59:47 CDT" duration-ms="21" status="FAIL">
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "Pageobjects.RegistrationPage.click_Register()" because "this.registerpage" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "Pageobjects.RegistrationPage.click_Register()" because "this.registerpage" is null
at TestClasses.RegistrationClassFile.click_registration_link_and_user_is_in_registration_page(RegistrationClassFile.java:20)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- click_registration_link_and_user_is_in_registration_page -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.RegistrationClassFile@329dbdbf]" started-at="2024-10-22T13:59:47 CDT" name="captureString" finished-at="2024-10-22T13:59:49 CDT" duration-ms="1295" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.RegistrationClassFile.click_registration_link_and_user_is_in_registration_page()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=click_registration_link_and_user_is_in_registration_page status=FAILURE method=RegistrationClassFile.click_registration_link_and_user_is_in_registration_page()[pri:3, instance:TestClasses.RegistrationClassFile@329dbdbf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.RegistrationClassFile@329dbdbf]" started-at="2024-10-22T13:59:49 CDT" name="callingobjects" finished-at="2024-10-22T13:59:53 CDT" duration-ms="4437" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@4f449e8f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="user_enter_credentials(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:4, instance:TestClasses.RegistrationClassFile@329dbdbf]" started-at="2024-10-22T13:59:53 CDT" name="user_enter_credentials" data-provider="Registationdatapro" finished-at="2024-10-22T13:59:53 CDT" duration-ms="10" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Nirvana]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[archanachaya]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[print("helloSelenium")]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Valid]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "Pageobjects.RegistrationPage.enter_username(String)" because "this.registerpage" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "Pageobjects.RegistrationPage.enter_username(String)" because "this.registerpage" is null
at TestClasses.RegistrationClassFile.user_enter_credentials(RegistrationClassFile.java:27)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- user_enter_credentials -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.RegistrationClassFile@329dbdbf]" started-at="2024-10-22T13:59:53 CDT" name="captureString" finished-at="2024-10-22T13:59:54 CDT" duration-ms="523" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.RegistrationClassFile.user_enter_credentials(java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=user_enter_credentials status=FAILURE method=RegistrationClassFile.user_enter_credentials(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:4, instance:TestClasses.RegistrationClassFile@329dbdbf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.RegistrationClassFile@329dbdbf]" started-at="2024-10-22T13:59:54 CDT" name="callingobjects" finished-at="2024-10-22T13:59:57 CDT" duration-ms="3199" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@4f449e8f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="clickRegisterbtn()[pri:5, instance:TestClasses.RegistrationClassFile@329dbdbf]" started-at="2024-10-22T13:59:57 CDT" name="clickRegisterbtn" finished-at="2024-10-22T13:59:57 CDT" duration-ms="8" status="FAIL">
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "Pageobjects.RegistrationPage.click_register_button()" because "this.registerpage" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "Pageobjects.RegistrationPage.click_register_button()" because "this.registerpage" is null
at TestClasses.RegistrationClassFile.clickRegisterbtn(RegistrationClassFile.java:33)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickRegisterbtn -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.RegistrationClassFile@329dbdbf]" started-at="2024-10-22T13:59:57 CDT" name="captureString" finished-at="2024-10-22T13:59:58 CDT" duration-ms="933" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.RegistrationClassFile.clickRegisterbtn()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=clickRegisterbtn status=FAILURE method=RegistrationClassFile.clickRegisterbtn()[pri:5, instance:TestClasses.RegistrationClassFile@329dbdbf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.RegistrationClassFile@329dbdbf]" started-at="2024-10-22T13:59:58 CDT" name="callingobjects" finished-at="2024-10-22T14:00:08 CDT" duration-ms="10291" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@4f449e8f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="quitmethod()[pri:6, instance:TestClasses.RegistrationClassFile@329dbdbf]" started-at="2024-10-22T14:00:08 CDT" name="quitmethod" finished-at="2024-10-22T14:00:26 CDT" duration-ms="17345" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitmethod -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.RegistrationClassFile@329dbdbf]" started-at="2024-10-22T14:00:26 CDT" name="captureString" finished-at="2024-10-22T14:00:26 CDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.RegistrationClassFile.quitmethod() throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=quitmethod status=SUCCESS method=RegistrationClassFile.quitmethod()[pri:6, instance:TestClasses.RegistrationClassFile@329dbdbf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
      </class> <!-- TestClasses.RegistrationClassFile -->
    </test> <!-- Test10 -->
    <test started-at="2024-10-22T13:59:11 CDT" name="Test9" finished-at="2024-10-22T14:01:02 CDT" duration-ms="110679">
      <class name="TestClasses.SigninPositiveNegativeLogin">
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.SigninPositiveNegativeLogin@6736fa8d]" started-at="2024-10-22T13:59:11 CDT" name="callingobjects" finished-at="2024-10-22T13:59:15 CDT" duration-ms="3277" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@41a6d121]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="LoginTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:TestClasses.SigninPositiveNegativeLogin@6736fa8d]" started-at="2024-10-22T13:59:15 CDT" name="LoginTest" data-provider="Logindata" finished-at="2024-10-22T13:59:29 CDT" duration-ms="14721" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Nirvana]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[archanachaya]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Valid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginTest -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.SigninPositiveNegativeLogin@6736fa8d]" started-at="2024-10-22T13:59:29 CDT" name="captureString" finished-at="2024-10-22T13:59:29 CDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.SigninPositiveNegativeLogin.LoginTest(java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=LoginTest status=SUCCESS method=SigninPositiveNegativeLogin.LoginTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:TestClasses.SigninPositiveNegativeLogin@6736fa8d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.SigninPositiveNegativeLogin@6736fa8d]" started-at="2024-10-22T13:59:29 CDT" name="callingobjects" finished-at="2024-10-22T13:59:33 CDT" duration-ms="3552" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@41a6d121]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="LoginTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:TestClasses.SigninPositiveNegativeLogin@6736fa8d]" started-at="2024-10-22T13:59:33 CDT" name="LoginTest" data-provider="Logindata" finished-at="2024-10-22T13:59:44 CDT" duration-ms="10691" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Narvana]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[archanachaya]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[InValid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginTest -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.SigninPositiveNegativeLogin@6736fa8d]" started-at="2024-10-22T13:59:44 CDT" name="captureString" finished-at="2024-10-22T13:59:44 CDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.SigninPositiveNegativeLogin.LoginTest(java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=LoginTest status=SUCCESS method=SigninPositiveNegativeLogin.LoginTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:TestClasses.SigninPositiveNegativeLogin@6736fa8d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.SigninPositiveNegativeLogin@6736fa8d]" started-at="2024-10-22T13:59:44 CDT" name="callingobjects" finished-at="2024-10-22T13:59:49 CDT" duration-ms="4846" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@41a6d121]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="LoginTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:TestClasses.SigninPositiveNegativeLogin@6736fa8d]" started-at="2024-10-22T13:59:49 CDT" name="LoginTest" data-provider="Logindata" finished-at="2024-10-22T14:00:21 CDT" duration-ms="32593" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Nirvana]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[65786687898]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[InValid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginTest -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.SigninPositiveNegativeLogin@6736fa8d]" started-at="2024-10-22T14:00:21 CDT" name="captureString" finished-at="2024-10-22T14:00:21 CDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.SigninPositiveNegativeLogin.LoginTest(java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=LoginTest status=SUCCESS method=SigninPositiveNegativeLogin.LoginTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:TestClasses.SigninPositiveNegativeLogin@6736fa8d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.SigninPositiveNegativeLogin@6736fa8d]" started-at="2024-10-22T14:00:21 CDT" name="callingobjects" finished-at="2024-10-22T14:00:25 CDT" duration-ms="3820" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@41a6d121]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="LoginTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:TestClasses.SigninPositiveNegativeLogin@6736fa8d]" started-at="2024-10-22T14:00:25 CDT" name="LoginTest" data-provider="Logindata" finished-at="2024-10-22T14:01:02 CDT" duration-ms="36921" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hsjkcbjkcb]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hggdyw78]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[InValid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginTest -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.SigninPositiveNegativeLogin@6736fa8d]" started-at="2024-10-22T14:01:02 CDT" name="captureString" finished-at="2024-10-22T14:01:02 CDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.SigninPositiveNegativeLogin.LoginTest(java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=LoginTest status=SUCCESS method=SigninPositiveNegativeLogin.LoginTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:TestClasses.SigninPositiveNegativeLogin@6736fa8d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
      </class> <!-- TestClasses.SigninPositiveNegativeLogin -->
    </test> <!-- Test9 -->
    <test started-at="2024-10-22T14:00:26 CDT" name="Test11" finished-at="2024-10-22T14:01:21 CDT" duration-ms="54864">
      <class name="TestClasses.Registrationrerun">
        <test-method is-config="true" signature="initialiseExtentReports()[pri:0, instance:TestClasses.Registrationrerun@7f8a9499]" started-at="2024-10-22T13:55:17 CDT" name="initialiseExtentReports" finished-at="2024-10-22T13:55:17 CDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialiseExtentReports -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.Registrationrerun@7f8a9499]" started-at="2024-10-22T14:00:26 CDT" name="callingobjects" finished-at="2024-10-22T14:00:44 CDT" duration-ms="18377" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@411291e5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method retried="true" signature="Registrationpage(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:TestClasses.Registrationrerun@7f8a9499]" started-at="2024-10-22T14:00:44 CDT" name="Registrationpage" data-provider="Registationdatapro" finished-at="2024-10-22T14:00:49 CDT" duration-ms="4728" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[Nirvana]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[archanachaya]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[print("helloSelenium")]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Valid]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Credentials already exists] but found [password_mismatch:The two password fields didn’t match.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Credentials already exists] but found [password_mismatch:The two password fields didn’t match.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at TestClasses.Registrationrerun.Registrationpage(Registrationrerun.java:27)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Registrationpage -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.Registrationrerun@7f8a9499]" started-at="2024-10-22T14:00:49 CDT" name="captureString" finished-at="2024-10-22T14:00:49 CDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.Registrationrerun.Registrationpage(java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=Registrationpage status=SKIP method=Registrationrerun.Registrationpage(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:TestClasses.Registrationrerun@7f8a9499] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.Registrationrerun@7f8a9499]" started-at="2024-10-22T14:00:49 CDT" name="callingobjects" finished-at="2024-10-22T14:00:55 CDT" duration-ms="6001" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@411291e5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method retried="true" signature="Registrationpage(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:TestClasses.Registrationrerun@7f8a9499]" started-at="2024-10-22T14:00:55 CDT" name="Registrationpage" data-provider="Registationdatapro" finished-at="2024-10-22T14:00:57 CDT" duration-ms="1844" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[Nirvana]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[archanachaya]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[print("helloSelenium")]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Valid]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Credentials already exists] but found [password_mismatch:The two password fields didn’t match.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Credentials already exists] but found [password_mismatch:The two password fields didn’t match.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at TestClasses.Registrationrerun.Registrationpage(Registrationrerun.java:27)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Registrationpage -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.Registrationrerun@7f8a9499]" started-at="2024-10-22T14:00:57 CDT" name="captureString" finished-at="2024-10-22T14:00:57 CDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.Registrationrerun.Registrationpage(java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=Registrationpage status=SKIP method=Registrationrerun.Registrationpage(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:TestClasses.Registrationrerun@7f8a9499] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.Registrationrerun@7f8a9499]" started-at="2024-10-22T14:00:57 CDT" name="callingobjects" finished-at="2024-10-22T14:01:02 CDT" duration-ms="4947" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@411291e5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="Registrationpage(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:TestClasses.Registrationrerun@7f8a9499]" started-at="2024-10-22T14:01:02 CDT" name="Registrationpage" data-provider="Registationdatapro" finished-at="2024-10-22T14:01:05 CDT" duration-ms="3157" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Nirvana]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[archanachaya]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[print("helloSelenium")]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Valid]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Credentials already exists] but found [password_mismatch:The two password fields didn’t match.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Credentials already exists] but found [password_mismatch:The two password fields didn’t match.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at TestClasses.Registrationrerun.Registrationpage(Registrationrerun.java:27)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Registrationpage -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.Registrationrerun@7f8a9499]" started-at="2024-10-22T14:01:05 CDT" name="captureString" finished-at="2024-10-22T14:01:06 CDT" duration-ms="696" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.Registrationrerun.Registrationpage(java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=Registrationpage status=FAILURE method=Registrationrerun.Registrationpage(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:TestClasses.Registrationrerun@7f8a9499] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:TestClasses.Registrationrerun@7f8a9499]" started-at="2024-10-22T14:01:06 CDT" name="teardown" finished-at="2024-10-22T14:01:21 CDT" duration-ms="14977" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="generateExtentReports()[pri:0, instance:TestClasses.Registrationrerun@7f8a9499]" started-at="2024-10-22T14:03:51 CDT" name="generateExtentReports" finished-at="2024-10-22T14:03:52 CDT" duration-ms="956" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateExtentReports -->
      </class> <!-- TestClasses.Registrationrerun -->
      <class name="TestClasses.TreesClassFile">
        <test-method is-config="true" signature="initialiseExtentReports()[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T13:55:16 CDT" name="initialiseExtentReports" finished-at="2024-10-22T13:55:17 CDT" duration-ms="451" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialiseExtentReports -->
        <test-method is-config="true" signature="generateExtentReports()[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:03:48 CDT" name="generateExtentReports" finished-at="2024-10-22T14:03:51 CDT" duration-ms="2134" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateExtentReports -->
      </class> <!-- TestClasses.TreesClassFile -->
    </test> <!-- Test11 -->
    <test started-at="2024-10-22T13:55:54 CDT" name="Test5" finished-at="2024-10-22T14:01:56 CDT" duration-ms="362282">
      <class name="TestClasses.LinkedListFile">
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b]" started-at="2024-10-22T13:55:54 CDT" name="callingobjects" finished-at="2024-10-22T13:56:07 CDT" duration-ms="12523" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@456be73c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="invalid_linked_list(java.lang.String)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b]" started-at="2024-10-22T13:56:07 CDT" name="invalid_linked_list" data-provider="LinkedTopics" finished-at="2024-10-22T13:56:19 CDT" duration-ms="12932" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Introduction]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalid_linked_list -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b]" started-at="2024-10-22T13:56:20 CDT" name="captureString" finished-at="2024-10-22T13:56:20 CDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.LinkedListFile.invalid_linked_list(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=invalid_linked_list status=SUCCESS method=LinkedListFile.invalid_linked_list(java.lang.String)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b]" started-at="2024-10-22T13:56:20 CDT" name="callingobjects" finished-at="2024-10-22T13:56:27 CDT" duration-ms="7630" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@456be73c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="invalid_linked_list(java.lang.String)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b]" started-at="2024-10-22T13:56:27 CDT" name="invalid_linked_list" data-provider="LinkedTopics" finished-at="2024-10-22T13:56:34 CDT" duration-ms="6365" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Creating Linked LIst]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalid_linked_list -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b]" started-at="2024-10-22T13:56:34 CDT" name="captureString" finished-at="2024-10-22T13:56:34 CDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.LinkedListFile.invalid_linked_list(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=invalid_linked_list status=SUCCESS method=LinkedListFile.invalid_linked_list(java.lang.String)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b]" started-at="2024-10-22T13:56:34 CDT" name="callingobjects" finished-at="2024-10-22T13:56:41 CDT" duration-ms="7206" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@456be73c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="invalid_linked_list(java.lang.String)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b]" started-at="2024-10-22T13:56:41 CDT" name="invalid_linked_list" data-provider="LinkedTopics" finished-at="2024-10-22T13:56:57 CDT" duration-ms="16214" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Types of Linked List]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalid_linked_list -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b]" started-at="2024-10-22T13:56:57 CDT" name="captureString" finished-at="2024-10-22T13:56:57 CDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.LinkedListFile.invalid_linked_list(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=invalid_linked_list status=SUCCESS method=LinkedListFile.invalid_linked_list(java.lang.String)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b]" started-at="2024-10-22T13:56:57 CDT" name="callingobjects" finished-at="2024-10-22T13:57:05 CDT" duration-ms="8095" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@456be73c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="invalid_linked_list(java.lang.String)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b]" started-at="2024-10-22T13:57:05 CDT" name="invalid_linked_list" data-provider="LinkedTopics" finished-at="2024-10-22T13:57:29 CDT" duration-ms="23511" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Implement Linked List in Python]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalid_linked_list -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b]" started-at="2024-10-22T13:57:29 CDT" name="captureString" finished-at="2024-10-22T13:57:29 CDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.LinkedListFile.invalid_linked_list(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=invalid_linked_list status=SUCCESS method=LinkedListFile.invalid_linked_list(java.lang.String)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b]" started-at="2024-10-22T13:57:29 CDT" name="callingobjects" finished-at="2024-10-22T13:57:37 CDT" duration-ms="8235" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@456be73c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="invalid_linked_list(java.lang.String)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b]" started-at="2024-10-22T13:57:37 CDT" name="invalid_linked_list" data-provider="LinkedTopics" finished-at="2024-10-22T13:58:03 CDT" duration-ms="25603" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Traversal]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalid_linked_list -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b]" started-at="2024-10-22T13:58:03 CDT" name="captureString" finished-at="2024-10-22T13:58:03 CDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.LinkedListFile.invalid_linked_list(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=invalid_linked_list status=SUCCESS method=LinkedListFile.invalid_linked_list(java.lang.String)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b]" started-at="2024-10-22T13:58:03 CDT" name="callingobjects" finished-at="2024-10-22T13:58:08 CDT" duration-ms="5082" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@456be73c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="invalid_linked_list(java.lang.String)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b]" started-at="2024-10-22T13:58:08 CDT" name="invalid_linked_list" data-provider="LinkedTopics" finished-at="2024-10-22T13:58:35 CDT" duration-ms="26955" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Insertion]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalid_linked_list -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b]" started-at="2024-10-22T13:58:35 CDT" name="captureString" finished-at="2024-10-22T13:58:35 CDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.LinkedListFile.invalid_linked_list(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=invalid_linked_list status=SUCCESS method=LinkedListFile.invalid_linked_list(java.lang.String)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b]" started-at="2024-10-22T13:58:35 CDT" name="callingobjects" finished-at="2024-10-22T13:58:40 CDT" duration-ms="5404" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@456be73c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="invalid_linked_list(java.lang.String)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b]" started-at="2024-10-22T13:58:40 CDT" name="invalid_linked_list" data-provider="LinkedTopics" finished-at="2024-10-22T13:58:54 CDT" duration-ms="13866" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Deletion]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalid_linked_list -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b]" started-at="2024-10-22T13:58:54 CDT" name="captureString" finished-at="2024-10-22T13:58:54 CDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.LinkedListFile.invalid_linked_list(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=invalid_linked_list status=SUCCESS method=LinkedListFile.invalid_linked_list(java.lang.String)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b]" started-at="2024-10-22T13:58:54 CDT" name="callingobjects" finished-at="2024-10-22T13:59:01 CDT" duration-ms="6998" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@456be73c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="userClicks_linked_list(java.lang.String)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b]" started-at="2024-10-22T13:59:01 CDT" name="userClicks_linked_list" data-provider="LinkedTopics" finished-at="2024-10-22T13:59:15 CDT" duration-ms="14502" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Introduction]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userClicks_linked_list -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b]" started-at="2024-10-22T13:59:15 CDT" name="captureString" finished-at="2024-10-22T13:59:15 CDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.LinkedListFile.userClicks_linked_list(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=userClicks_linked_list status=SUCCESS method=LinkedListFile.userClicks_linked_list(java.lang.String)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b]" started-at="2024-10-22T13:59:15 CDT" name="callingobjects" finished-at="2024-10-22T13:59:23 CDT" duration-ms="7098" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@456be73c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="userClicks_linked_list(java.lang.String)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b]" started-at="2024-10-22T13:59:23 CDT" name="userClicks_linked_list" data-provider="LinkedTopics" finished-at="2024-10-22T13:59:58 CDT" duration-ms="35304" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Creating Linked LIst]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userClicks_linked_list -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b]" started-at="2024-10-22T13:59:58 CDT" name="captureString" finished-at="2024-10-22T13:59:58 CDT" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.LinkedListFile.userClicks_linked_list(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=userClicks_linked_list status=SUCCESS method=LinkedListFile.userClicks_linked_list(java.lang.String)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b]" started-at="2024-10-22T13:59:58 CDT" name="callingobjects" finished-at="2024-10-22T14:00:11 CDT" duration-ms="12870" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@456be73c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="userClicks_linked_list(java.lang.String)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b]" started-at="2024-10-22T14:00:11 CDT" name="userClicks_linked_list" data-provider="LinkedTopics" finished-at="2024-10-22T14:00:31 CDT" duration-ms="20517" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Types of Linked List]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userClicks_linked_list -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b]" started-at="2024-10-22T14:00:31 CDT" name="captureString" finished-at="2024-10-22T14:00:31 CDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.LinkedListFile.userClicks_linked_list(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=userClicks_linked_list status=SUCCESS method=LinkedListFile.userClicks_linked_list(java.lang.String)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b]" started-at="2024-10-22T14:00:31 CDT" name="callingobjects" finished-at="2024-10-22T14:00:42 CDT" duration-ms="10357" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@456be73c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="userClicks_linked_list(java.lang.String)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b]" started-at="2024-10-22T14:00:42 CDT" name="userClicks_linked_list" data-provider="LinkedTopics" finished-at="2024-10-22T14:01:01 CDT" duration-ms="18905" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Implement Linked List in Python]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userClicks_linked_list -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b]" started-at="2024-10-22T14:01:01 CDT" name="captureString" finished-at="2024-10-22T14:01:01 CDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.LinkedListFile.userClicks_linked_list(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=userClicks_linked_list status=SUCCESS method=LinkedListFile.userClicks_linked_list(java.lang.String)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b]" started-at="2024-10-22T14:01:01 CDT" name="callingobjects" finished-at="2024-10-22T14:01:08 CDT" duration-ms="7470" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@456be73c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="userClicks_linked_list(java.lang.String)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b]" started-at="2024-10-22T14:01:08 CDT" name="userClicks_linked_list" data-provider="LinkedTopics" finished-at="2024-10-22T14:01:21 CDT" duration-ms="13064" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Traversal]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userClicks_linked_list -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b]" started-at="2024-10-22T14:01:21 CDT" name="captureString" finished-at="2024-10-22T14:01:21 CDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.LinkedListFile.userClicks_linked_list(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=userClicks_linked_list status=SUCCESS method=LinkedListFile.userClicks_linked_list(java.lang.String)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b]" started-at="2024-10-22T14:01:21 CDT" name="callingobjects" finished-at="2024-10-22T14:01:28 CDT" duration-ms="6893" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@456be73c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="userClicks_linked_list(java.lang.String)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b]" started-at="2024-10-22T14:01:28 CDT" name="userClicks_linked_list" data-provider="LinkedTopics" finished-at="2024-10-22T14:01:38 CDT" duration-ms="9639" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Insertion]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userClicks_linked_list -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b]" started-at="2024-10-22T14:01:38 CDT" name="captureString" finished-at="2024-10-22T14:01:38 CDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.LinkedListFile.userClicks_linked_list(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=userClicks_linked_list status=SUCCESS method=LinkedListFile.userClicks_linked_list(java.lang.String)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b]" started-at="2024-10-22T14:01:38 CDT" name="callingobjects" finished-at="2024-10-22T14:01:44 CDT" duration-ms="6122" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@456be73c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="userClicks_linked_list(java.lang.String)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b]" started-at="2024-10-22T14:01:44 CDT" name="userClicks_linked_list" data-provider="LinkedTopics" finished-at="2024-10-22T14:01:56 CDT" duration-ms="12377" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Deletion]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userClicks_linked_list -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b]" started-at="2024-10-22T14:01:56 CDT" name="captureString" finished-at="2024-10-22T14:01:56 CDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.LinkedListFile.userClicks_linked_list(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=userClicks_linked_list status=SUCCESS method=LinkedListFile.userClicks_linked_list(java.lang.String)[pri:0, instance:TestClasses.LinkedListFile@42e25b0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
      </class> <!-- TestClasses.LinkedListFile -->
    </test> <!-- Test5 -->
    <test started-at="2024-10-22T13:58:54 CDT" name="Test8" finished-at="2024-10-22T14:03:48 CDT" duration-ms="294307">
      <class name="TestClasses.TreesClassFile">
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T13:58:54 CDT" name="callingobjects" finished-at="2024-10-22T13:59:01 CDT" duration-ms="6651" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5b6e8f77]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="invalid_trees_pane(java.lang.String)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T13:59:01 CDT" name="invalid_trees_pane" data-provider="TreesTopics" finished-at="2024-10-22T13:59:22 CDT" duration-ms="20716" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Overview of Trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalid_trees_pane -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T13:59:22 CDT" name="captureString" finished-at="2024-10-22T13:59:22 CDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.TreesClassFile.invalid_trees_pane(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=invalid_trees_pane status=SUCCESS method=TreesClassFile.invalid_trees_pane(java.lang.String)[pri:0, instance:TestClasses.TreesClassFile@5456afaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T13:59:22 CDT" name="callingobjects" finished-at="2024-10-22T13:59:28 CDT" duration-ms="6678" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5b6e8f77]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="invalid_trees_pane(java.lang.String)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T13:59:28 CDT" name="invalid_trees_pane" data-provider="TreesTopics" finished-at="2024-10-22T13:59:35 CDT" duration-ms="6326" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Terminologies]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalid_trees_pane -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T13:59:35 CDT" name="captureString" finished-at="2024-10-22T13:59:35 CDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.TreesClassFile.invalid_trees_pane(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=invalid_trees_pane status=SUCCESS method=TreesClassFile.invalid_trees_pane(java.lang.String)[pri:0, instance:TestClasses.TreesClassFile@5456afaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T13:59:35 CDT" name="callingobjects" finished-at="2024-10-22T13:59:41 CDT" duration-ms="6089" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5b6e8f77]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="invalid_trees_pane(java.lang.String)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T13:59:41 CDT" name="invalid_trees_pane" data-provider="TreesTopics" finished-at="2024-10-22T14:00:14 CDT" duration-ms="33651" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Types of Trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalid_trees_pane -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:00:14 CDT" name="captureString" finished-at="2024-10-22T14:00:14 CDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.TreesClassFile.invalid_trees_pane(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=invalid_trees_pane status=SUCCESS method=TreesClassFile.invalid_trees_pane(java.lang.String)[pri:0, instance:TestClasses.TreesClassFile@5456afaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:00:14 CDT" name="callingobjects" finished-at="2024-10-22T14:00:19 CDT" duration-ms="4649" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5b6e8f77]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="invalid_trees_pane(java.lang.String)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:00:19 CDT" name="invalid_trees_pane" data-provider="TreesTopics" finished-at="2024-10-22T14:00:31 CDT" duration-ms="12267" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tree Traversals]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalid_trees_pane -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:00:31 CDT" name="callingobjects" finished-at="2024-10-22T14:00:44 CDT" duration-ms="12653" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5b6e8f77]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:00:31 CDT" name="captureString" finished-at="2024-10-22T14:00:31 CDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.TreesClassFile.invalid_trees_pane(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=invalid_trees_pane status=SUCCESS method=TreesClassFile.invalid_trees_pane(java.lang.String)[pri:0, instance:TestClasses.TreesClassFile@5456afaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method signature="invalid_trees_pane(java.lang.String)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:00:44 CDT" name="invalid_trees_pane" data-provider="TreesTopics" finished-at="2024-10-22T14:01:15 CDT" duration-ms="30957" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Traversals-Illustration]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalid_trees_pane -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:01:15 CDT" name="captureString" finished-at="2024-10-22T14:01:15 CDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.TreesClassFile.invalid_trees_pane(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=invalid_trees_pane status=SUCCESS method=TreesClassFile.invalid_trees_pane(java.lang.String)[pri:0, instance:TestClasses.TreesClassFile@5456afaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:01:15 CDT" name="callingobjects" finished-at="2024-10-22T14:01:20 CDT" duration-ms="5367" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5b6e8f77]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="invalid_trees_pane(java.lang.String)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:01:20 CDT" name="invalid_trees_pane" data-provider="TreesTopics" finished-at="2024-10-22T14:01:47 CDT" duration-ms="26810" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Binary Trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalid_trees_pane -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:01:47 CDT" name="captureString" finished-at="2024-10-22T14:01:47 CDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.TreesClassFile.invalid_trees_pane(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=invalid_trees_pane status=SUCCESS method=TreesClassFile.invalid_trees_pane(java.lang.String)[pri:0, instance:TestClasses.TreesClassFile@5456afaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:01:47 CDT" name="callingobjects" finished-at="2024-10-22T14:01:52 CDT" duration-ms="4840" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5b6e8f77]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="invalid_trees_pane(java.lang.String)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:01:52 CDT" name="invalid_trees_pane" data-provider="TreesTopics" finished-at="2024-10-22T14:01:57 CDT" duration-ms="4899" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Types of Binary Trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalid_trees_pane -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:01:57 CDT" name="captureString" finished-at="2024-10-22T14:01:57 CDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.TreesClassFile.invalid_trees_pane(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=invalid_trees_pane status=SUCCESS method=TreesClassFile.invalid_trees_pane(java.lang.String)[pri:0, instance:TestClasses.TreesClassFile@5456afaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:01:57 CDT" name="callingobjects" finished-at="2024-10-22T14:02:02 CDT" duration-ms="5479" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5b6e8f77]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="invalid_trees_pane(java.lang.String)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:02:02 CDT" name="invalid_trees_pane" data-provider="TreesTopics" finished-at="2024-10-22T14:02:06 CDT" duration-ms="3186" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Implementation in Python]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalid_trees_pane -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:02:06 CDT" name="captureString" finished-at="2024-10-22T14:02:06 CDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.TreesClassFile.invalid_trees_pane(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=invalid_trees_pane status=SUCCESS method=TreesClassFile.invalid_trees_pane(java.lang.String)[pri:0, instance:TestClasses.TreesClassFile@5456afaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:02:06 CDT" name="callingobjects" finished-at="2024-10-22T14:02:10 CDT" duration-ms="4753" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5b6e8f77]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="invalid_trees_pane(java.lang.String)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:02:10 CDT" name="invalid_trees_pane" data-provider="TreesTopics" finished-at="2024-10-22T14:02:13 CDT" duration-ms="2690" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Applications of Binary trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalid_trees_pane -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:02:13 CDT" name="captureString" finished-at="2024-10-22T14:02:13 CDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.TreesClassFile.invalid_trees_pane(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=invalid_trees_pane status=SUCCESS method=TreesClassFile.invalid_trees_pane(java.lang.String)[pri:0, instance:TestClasses.TreesClassFile@5456afaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:02:13 CDT" name="callingobjects" finished-at="2024-10-22T14:02:18 CDT" duration-ms="4699" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5b6e8f77]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="invalid_trees_pane(java.lang.String)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:02:18 CDT" name="invalid_trees_pane" data-provider="TreesTopics" finished-at="2024-10-22T14:02:20 CDT" duration-ms="2549" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Binary Search Trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalid_trees_pane -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:02:20 CDT" name="captureString" finished-at="2024-10-22T14:02:20 CDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.TreesClassFile.invalid_trees_pane(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=invalid_trees_pane status=SUCCESS method=TreesClassFile.invalid_trees_pane(java.lang.String)[pri:0, instance:TestClasses.TreesClassFile@5456afaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:02:20 CDT" name="callingobjects" finished-at="2024-10-22T14:02:25 CDT" duration-ms="4722" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5b6e8f77]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="invalid_trees_pane(java.lang.String)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:02:25 CDT" name="invalid_trees_pane" data-provider="TreesTopics" finished-at="2024-10-22T14:02:29 CDT" duration-ms="3770" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Implementation Of BST]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalid_trees_pane -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:02:29 CDT" name="captureString" finished-at="2024-10-22T14:02:29 CDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.TreesClassFile.invalid_trees_pane(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=invalid_trees_pane status=SUCCESS method=TreesClassFile.invalid_trees_pane(java.lang.String)[pri:0, instance:TestClasses.TreesClassFile@5456afaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:02:29 CDT" name="callingobjects" finished-at="2024-10-22T14:02:33 CDT" duration-ms="4688" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5b6e8f77]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="valid_trees_pane(java.lang.String)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:02:33 CDT" name="valid_trees_pane" data-provider="TreesTopics" finished-at="2024-10-22T14:02:36 CDT" duration-ms="2385" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Overview of Trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- valid_trees_pane -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:02:36 CDT" name="captureString" finished-at="2024-10-22T14:02:36 CDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.TreesClassFile.valid_trees_pane(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=valid_trees_pane status=SUCCESS method=TreesClassFile.valid_trees_pane(java.lang.String)[pri:0, instance:TestClasses.TreesClassFile@5456afaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:02:36 CDT" name="callingobjects" finished-at="2024-10-22T14:02:41 CDT" duration-ms="4807" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5b6e8f77]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="valid_trees_pane(java.lang.String)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:02:41 CDT" name="valid_trees_pane" data-provider="TreesTopics" finished-at="2024-10-22T14:02:43 CDT" duration-ms="2368" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Terminologies]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- valid_trees_pane -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:02:43 CDT" name="callingobjects" finished-at="2024-10-22T14:02:47 CDT" duration-ms="4323" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5b6e8f77]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:02:43 CDT" name="captureString" finished-at="2024-10-22T14:02:43 CDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.TreesClassFile.valid_trees_pane(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=valid_trees_pane status=SUCCESS method=TreesClassFile.valid_trees_pane(java.lang.String)[pri:0, instance:TestClasses.TreesClassFile@5456afaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method signature="valid_trees_pane(java.lang.String)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:02:47 CDT" name="valid_trees_pane" data-provider="TreesTopics" finished-at="2024-10-22T14:02:50 CDT" duration-ms="2488" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Types of Trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- valid_trees_pane -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:02:50 CDT" name="captureString" finished-at="2024-10-22T14:02:50 CDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.TreesClassFile.valid_trees_pane(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=valid_trees_pane status=SUCCESS method=TreesClassFile.valid_trees_pane(java.lang.String)[pri:0, instance:TestClasses.TreesClassFile@5456afaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:02:50 CDT" name="callingobjects" finished-at="2024-10-22T14:02:55 CDT" duration-ms="4947" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5b6e8f77]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="valid_trees_pane(java.lang.String)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:02:55 CDT" name="valid_trees_pane" data-provider="TreesTopics" finished-at="2024-10-22T14:02:58 CDT" duration-ms="2718" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tree Traversals]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- valid_trees_pane -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:02:58 CDT" name="captureString" finished-at="2024-10-22T14:02:58 CDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.TreesClassFile.valid_trees_pane(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=valid_trees_pane status=SUCCESS method=TreesClassFile.valid_trees_pane(java.lang.String)[pri:0, instance:TestClasses.TreesClassFile@5456afaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:02:58 CDT" name="callingobjects" finished-at="2024-10-22T14:03:03 CDT" duration-ms="4990" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5b6e8f77]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="valid_trees_pane(java.lang.String)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:03:03 CDT" name="valid_trees_pane" data-provider="TreesTopics" finished-at="2024-10-22T14:03:05 CDT" duration-ms="2389" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Traversals-Illustration]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- valid_trees_pane -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:03:05 CDT" name="captureString" finished-at="2024-10-22T14:03:05 CDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.TreesClassFile.valid_trees_pane(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=valid_trees_pane status=SUCCESS method=TreesClassFile.valid_trees_pane(java.lang.String)[pri:0, instance:TestClasses.TreesClassFile@5456afaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:03:05 CDT" name="callingobjects" finished-at="2024-10-22T14:03:10 CDT" duration-ms="4659" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5b6e8f77]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="valid_trees_pane(java.lang.String)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:03:10 CDT" name="valid_trees_pane" data-provider="TreesTopics" finished-at="2024-10-22T14:03:12 CDT" duration-ms="2395" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Binary Trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- valid_trees_pane -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:03:12 CDT" name="captureString" finished-at="2024-10-22T14:03:12 CDT" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.TreesClassFile.valid_trees_pane(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=valid_trees_pane status=SUCCESS method=TreesClassFile.valid_trees_pane(java.lang.String)[pri:0, instance:TestClasses.TreesClassFile@5456afaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:03:12 CDT" name="callingobjects" finished-at="2024-10-22T14:03:17 CDT" duration-ms="4561" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5b6e8f77]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="valid_trees_pane(java.lang.String)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:03:17 CDT" name="valid_trees_pane" data-provider="TreesTopics" finished-at="2024-10-22T14:03:19 CDT" duration-ms="2318" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Types of Binary Trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- valid_trees_pane -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:03:19 CDT" name="captureString" finished-at="2024-10-22T14:03:19 CDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.TreesClassFile.valid_trees_pane(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=valid_trees_pane status=SUCCESS method=TreesClassFile.valid_trees_pane(java.lang.String)[pri:0, instance:TestClasses.TreesClassFile@5456afaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:03:19 CDT" name="callingobjects" finished-at="2024-10-22T14:03:23 CDT" duration-ms="4598" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5b6e8f77]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="valid_trees_pane(java.lang.String)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:03:23 CDT" name="valid_trees_pane" data-provider="TreesTopics" finished-at="2024-10-22T14:03:27 CDT" duration-ms="3507" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Implementation in Python]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- valid_trees_pane -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:03:27 CDT" name="captureString" finished-at="2024-10-22T14:03:27 CDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.TreesClassFile.valid_trees_pane(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=valid_trees_pane status=SUCCESS method=TreesClassFile.valid_trees_pane(java.lang.String)[pri:0, instance:TestClasses.TreesClassFile@5456afaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:03:27 CDT" name="callingobjects" finished-at="2024-10-22T14:03:32 CDT" duration-ms="4786" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5b6e8f77]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="valid_trees_pane(java.lang.String)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:03:32 CDT" name="valid_trees_pane" data-provider="TreesTopics" finished-at="2024-10-22T14:03:34 CDT" duration-ms="2667" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Applications of Binary trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- valid_trees_pane -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:03:34 CDT" name="captureString" finished-at="2024-10-22T14:03:34 CDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.TreesClassFile.valid_trees_pane(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=valid_trees_pane status=SUCCESS method=TreesClassFile.valid_trees_pane(java.lang.String)[pri:0, instance:TestClasses.TreesClassFile@5456afaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:03:34 CDT" name="callingobjects" finished-at="2024-10-22T14:03:39 CDT" duration-ms="4354" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5b6e8f77]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="valid_trees_pane(java.lang.String)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:03:39 CDT" name="valid_trees_pane" data-provider="TreesTopics" finished-at="2024-10-22T14:03:41 CDT" duration-ms="2557" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Binary Search Trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- valid_trees_pane -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:03:41 CDT" name="captureString" finished-at="2024-10-22T14:03:41 CDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.TreesClassFile.valid_trees_pane(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=valid_trees_pane status=SUCCESS method=TreesClassFile.valid_trees_pane(java.lang.String)[pri:0, instance:TestClasses.TreesClassFile@5456afaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
        <test-method is-config="true" signature="callingobjects(org.testng.ITestContext)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:03:41 CDT" name="callingobjects" finished-at="2024-10-22T14:03:46 CDT" duration-ms="4814" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5b6e8f77]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callingobjects -->
        <test-method signature="valid_trees_pane(java.lang.String)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:03:46 CDT" name="valid_trees_pane" data-provider="TreesTopics" finished-at="2024-10-22T14:03:48 CDT" duration-ms="2232" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Implementation Of BST]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- valid_trees_pane -->
        <test-method is-config="true" signature="captureString(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:TestClasses.TreesClassFile@5456afaa]" started-at="2024-10-22T14:03:48 CDT" name="captureString" finished-at="2024-10-22T14:03:48 CDT" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestClasses.TreesClassFile.valid_trees_pane(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=valid_trees_pane status=SUCCESS method=TreesClassFile.valid_trees_pane(java.lang.String)[pri:0, instance:TestClasses.TreesClassFile@5456afaa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureString -->
      </class> <!-- TestClasses.TreesClassFile -->
    </test> <!-- Test8 -->
  </suite> <!-- Suite -->
</testng-results>
